intersectionsf2 <- st_intersection( pointsDataSf2, statesMap)
intersectionsf <- intersectionsf %>%
select(!any_of(c('geometry', 'cov_id', 'cov_', 'area', 'perimeter'))) %>%
st_drop_geometry()
intersectionsf2 <- intersectionsf %>%
select(!any_of(c('geometry', 'cov_id', 'cov_', 'area', 'perimeter'))) %>%
st_drop_geometry()
statesMap<- statesMap %>%
select(cvegeo)
migrationData <- merge(pointsData, intersectionsf, by='id') %>%
setnames(old = c('cvegeo', 'cve_ent', 'nomgeo', 'cve_cap', 'nom_cap'),
new=c('cvegeo_from', 'cve_ent_from', 'nomgeo_from', 'cve_cap_from', 'nom_cap_from')) %>%
merge(intersectionsf2, by='id') %>%
setnames(old = c('cvegeo', 'cve_ent', 'nomgeo', 'cve_cap', 'nom_cap'),
new=c('cvegeo_to', 'cve_ent_to', 'nomgeo_to', 'cve_cap_to', 'nom_cap_to'))
migrationData
migrationData$cvegeo_from %>%  unique
migrationData$nomgeo_from %>%  unique
migrationData %>%
data.table %>%
.[, region := fcase(
nomgeo_from %in% c('Baja California', 'Baja California Sur', 'Sonora', 'Chihuahua', 'Sinaloa', 'Durango'), 'Noroeste',
nomgeo_from %in% c('Coahuila de Zaragoza', 'Nuevo León', 'Tamaulipas'), 'Noreste',
nomgeo_from %in% c('Zacatecas', 'Aguascalientes', 'San Luis Potosí', 'Querétaro', 'Guanajuato'), 'Centro Norte',
nomgeo_from %in% c('México', 'Ciudad de México', 'Morelos'), 'Centro Sur',
nomgeo_from %in% c('Nayarit', 'Jalisco', 'Colima', 'Michoacán de Ocampo'), 'Occidente',
nomgeo_from %in% c('Hidalgo', 'Puebla', 'Tlaxcala', 'Veracruz de Ignacio de la Llave'), 'Oriente',
nomgeo_from %in% c('Guerrero', 'Oaxaca', 'Chiapas'), 'Suroeste',
default = 'Sureste'
)]
####################################
# Creado/Author por/by Fernando Dorantes Nieto <(°)
#                                               ( >)"
#                                                /|
#
#
####################################
library(magrittr)
library(data.table)
library(sf)
library(dplyr)
library(ggplot2)
library(tmap)
library(ggspatial)
library(gganimate)
library(patchwork)
## Origin of data
# https://hub.worldpop.org/geodata/summary?id=1283
setwd('C:/Users/fernando.dorantes/local/Git_repositories/Repo30DayMapChallenge2024/')
statesMap <- st_read('./Data/dest23gw_c/dest23cw.shp')
centroidsData <- st_read('./Data/Day_25Data/Latin_America_and_Caribbean_1km_Internal_Migration_Flows/MEX_5yrs_InternalMigFlows_2010/MEX_AdminUnit_Centroids/MEX_AdminUnit_Centroids.shp')
pointsData <- fread('./Data/Day_25Data/Latin_America_and_Caribbean_1km_Internal_Migration_Flows/MEX_5yrs_InternalMigFlows_2010/MEX_5yrs_InternalMigFlows_2010.csv')
statesMap <- st_transform(statesMap, 4326)
names(statesMap) <- tolower(names(statesMap))
names(pointsData)<- tolower(names(pointsData))
names(centroidsData)<- tolower(names(centroidsData))
pointsData<- pointsData %>%
.[, id := paste0(iso, '_', nodej, '_', nodei) ]
pointsDataSf <- st_as_sf(pointsData, coords= c('lonfr', 'latfr')) %>%
select('id')
pointsDataSf2 <- st_as_sf(pointsData, coords= c('lonto', 'latto')) %>%
select('id')
st_crs(pointsDataSf) <- st_crs(statesMap)
st_crs(pointsDataSf2) <- st_crs(statesMap)
intersectionsf <- st_intersection( pointsDataSf, statesMap)
intersectionsf2 <- st_intersection( pointsDataSf2, statesMap)
intersectionsf <- intersectionsf %>%
select(!any_of(c('geometry', 'cov_id', 'cov_', 'area', 'perimeter'))) %>%
st_drop_geometry()
intersectionsf2 <- intersectionsf %>%
select(!any_of(c('geometry', 'cov_id', 'cov_', 'area', 'perimeter'))) %>%
st_drop_geometry()
statesMap<- statesMap %>%
select(cvegeo)
migrationData <- merge(pointsData, intersectionsf, by='id') %>%
setnames(old = c('cvegeo', 'cve_ent', 'nomgeo', 'cve_cap', 'nom_cap'),
new=c('cvegeo_from', 'cve_ent_from', 'nomgeo_from', 'cve_cap_from', 'nom_cap_from')) %>%
merge(intersectionsf2, by='id') %>%
setnames(old = c('cvegeo', 'cve_ent', 'nomgeo', 'cve_cap', 'nom_cap'),
new=c('cvegeo_to', 'cve_ent_to', 'nomgeo_to', 'cve_cap_to', 'nom_cap_to'))
migrationData <- migrationData %>%
data.table %>%
.[, region := fcase(
nomgeo_from %in% c('Baja California', 'Baja California Sur', 'Sonora', 'Chihuahua', 'Sinaloa', 'Durango'), 'Noroeste',
nomgeo_from %in% c('Coahuila de Zaragoza', 'Nuevo León', 'Tamaulipas'), 'Noreste',
nomgeo_from %in% c('Zacatecas', 'Aguascalientes', 'San Luis Potosí', 'Querétaro', 'Guanajuato'), 'Centro Norte',
nomgeo_from %in% c('México', 'Ciudad de México', 'Morelos'), 'Centro Sur',
nomgeo_from %in% c('Nayarit', 'Jalisco', 'Colima', 'Michoacán de Ocampo'), 'Occidente',
nomgeo_from %in% c('Hidalgo', 'Puebla', 'Tlaxcala', 'Veracruz de Ignacio de la Llave'), 'Oriente',
nomgeo_from %in% c('Guerrero', 'Oaxaca', 'Chiapas'), 'Suroeste',
default = 'Sureste'
)]
migrationData %>%  head
migrationData[region=='Noroeste']
ggplot(migrationData[region=='Noroeste']) +
borders("mexico", colour = "gray85", fill = "gray80")+
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
color="#FFFFFF")) +  coord_equal()
ggplot(migrationData[region=='Noroeste']) +
geom_sf(data = statesMap)+
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
color="#FFFFFF")) +  coord_equal()
maps::map()
maps::map() %>%  class()
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "gray85", fill = "gray80") +  # Mapa base
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
color="#FFFFFF")) +  coord_equal()
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +  # Mapa base
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
color="#FFFFFF")) +  coord_equal()
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +  # Mapa base
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
color="#FFFFFF", size=prdmig)) +  coord_equal()
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +  # Mapa base
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
color="#FFFFFF", size=prdmig)) +
coord_equal()+
facet_wrap(~cvegeo_from)
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +  # Mapa base
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
color="#FFFFFF", size=prdmig)) +
coord_equal()+
facet_wrap(~nomgeo_from)
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
color="blue", size=prdmig)) +
coord_equal()+
facet_wrap(~nomgeo_from)
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
fill="blue", size=prdmig)) +
coord_equal()+
facet_wrap(~nomgeo_from)
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
fill="steelblue", size=prdmig)) +
coord_equal()+
facet_wrap(~nomgeo_from)
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
size=prdmig),  fill="steelblue") +
coord_equal()+
facet_wrap(~nomgeo_from)
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
size=prdmig),  color="steelblue") +
coord_equal()+
facet_wrap(~nomgeo_from)
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
size=prdmig),  color="steelblue") +
scale_size_continuous(
range = c(0.2, 2),  # Tamaño mínimo y máximo de las líneas
breaks = c(100, 500, 1000, 5000, 10000),  # Rango ajustado para prdmig
labels = c("100", "500", "1K", "5K", "10K"),  # Etiquetas legibles
name = "Migración\n(Num. Personas)"
) +
coord_equal()+
facet_wrap(~nomgeo_from)
####################################
# Creado/Author por/by Fernando Dorantes Nieto <(°)
#                                               ( >)"
#                                                /|
#
#
####################################
library(magrittr)
library(data.table)
library(sf)
library(dplyr)
library(ggplot2)
library(tmap)
library(ggspatial)
library(gganimate)
library(patchwork)
## Origin of data
# https://hub.worldpop.org/geodata/summary?id=1283
setwd('C:/Users/fernando.dorantes/local/Git_repositories/Repo30DayMapChallenge2024/')
statesMap <- st_read('./Data/dest23gw_c/dest23cw.shp')
centroidsData <- st_read('./Data/Day_25Data/Latin_America_and_Caribbean_1km_Internal_Migration_Flows/MEX_5yrs_InternalMigFlows_2010/MEX_AdminUnit_Centroids/MEX_AdminUnit_Centroids.shp')
pointsData <- fread('./Data/Day_25Data/Latin_America_and_Caribbean_1km_Internal_Migration_Flows/MEX_5yrs_InternalMigFlows_2010/MEX_5yrs_InternalMigFlows_2010.csv')
statesMap <- st_transform(statesMap, 4326)
names(statesMap) <- tolower(names(statesMap))
names(pointsData)<- tolower(names(pointsData))
names(centroidsData)<- tolower(names(centroidsData))
pointsData<- pointsData %>%
.[, id := paste0(iso, '_', nodej, '_', nodei) ]
pointsDataSf <- st_as_sf(pointsData, coords= c('lonfr', 'latfr')) %>%
select('id')
pointsDataSf2 <- st_as_sf(pointsData, coords= c('lonto', 'latto')) %>%
select('id')
st_crs(pointsDataSf) <- st_crs(statesMap)
st_crs(pointsDataSf2) <- st_crs(statesMap)
intersectionsf <- st_intersection( pointsDataSf, statesMap)
intersectionsf2 <- st_intersection( pointsDataSf2, statesMap)
intersectionsf <- intersectionsf %>%
select(!any_of(c('geometry', 'cov_id', 'cov_', 'area', 'perimeter'))) %>%
st_drop_geometry()
intersectionsf2 <- intersectionsf %>%
select(!any_of(c('geometry', 'cov_id', 'cov_', 'area', 'perimeter'))) %>%
st_drop_geometry()
statesMap<- statesMap %>%
select(cvegeo)
migrationData <- merge(pointsData, intersectionsf, by='id') %>%
setnames(old = c('cvegeo', 'cve_ent', 'nomgeo', 'cve_cap', 'nom_cap'),
new=c('cvegeo_from', 'cve_ent_from', 'nomgeo_from', 'cve_cap_from', 'nom_cap_from')) %>%
merge(intersectionsf2, by='id') %>%
setnames(old = c('cvegeo', 'cve_ent', 'nomgeo', 'cve_cap', 'nom_cap'),
new=c('cvegeo_to', 'cve_ent_to', 'nomgeo_to', 'cve_cap_to', 'nom_cap_to'))
migrationData <- migrationData %>%
data.table %>%
.[, region := fcase(
nomgeo_from %in% c('Baja California', 'Baja California Sur', 'Sonora', 'Chihuahua', 'Sinaloa', 'Durango'), 'Noroeste',
nomgeo_from %in% c('Coahuila de Zaragoza', 'Nuevo León', 'Tamaulipas'), 'Noreste',
nomgeo_from %in% c('Zacatecas', 'Aguascalientes', 'San Luis Potosí', 'Querétaro', 'Guanajuato'), 'Centro Norte',
nomgeo_from %in% c('México', 'Ciudad de México', 'Morelos'), 'Centro Sur',
nomgeo_from %in% c('Nayarit', 'Jalisco', 'Colima', 'Michoacán de Ocampo'), 'Occidente',
nomgeo_from %in% c('Hidalgo', 'Puebla', 'Tlaxcala', 'Veracruz de Ignacio de la Llave'), 'Oriente',
nomgeo_from %in% c('Guerrero', 'Oaxaca', 'Chiapas'), 'Suroeste',
default = 'Sureste'
)] %>%
.[, nomgeo_from := fifelse(nomgeo_from=='México', 'Estado de México',
nomgeo_from)]
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
size=prdmig),  color="steelblue") +
scale_size_continuous(
range = c(0.2, 2),  # Tamaño mínimo y máximo de las líneas
breaks = c(100, 500, 1000, 5000, 10000),  # Rango ajustado para prdmig
labels = c("100", "500", "1K", "5K", "10K"),  # Etiquetas legibles
name = "Migración\n(Num. Personas)"
) +
coord_equal()+
facet_wrap(~nomgeo_from)+
theme_void(base_size = 12) +  # Tema base sin elementos visuales innecesarios
theme(
strip.text = element_text(size = 10, face = "bold"),  # Títulos de las facetas
panel.grid = element_blank(),  # Eliminar cuadrículas
panel.border = element_blank(),  # Eliminar bordes
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),  # Centrar título
plot.subtitle = element_text(size = 12, hjust = 0.5),  # Centrar subtítulo
legend.position = "bottom",  # Mover la leyenda abajo
legend.key.width = unit(2, "cm"),  # Ancho de los elementos de la leyenda
legend.key.height = unit(0.4, "cm")  # Altura de los elementos de la leyenda
) +
# Títulos
labs(
title = "Flujos Migratorios en el Noroeste de México",
subtitle = "Rutas de migración representadas por el número de personas",
caption = "Fuente: Datos simulados"
)
ggplot(migrationData[region=='Noroeste']) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
size=prdmig),  color="steelblue") +
scale_size_continuous(
range = c(0.2, 2),  # Tamaño mínimo y máximo de las líneas
breaks = c(100, 500, 1000, 5000, 10000),  # Rango ajustado para prdmig
labels = c("100", "500", "1K", "5K", "10K"),  # Etiquetas legibles
name = "Migración\n(Num. Personas)"
) +
coord_equal()+
facet_wrap(~nomgeo_from)+
theme_void(base_size = 12) +  # Tema base sin elementos visuales innecesarios
theme(
strip.text = element_text(size = 10, face = "bold"),  # Títulos de las facetas
panel.grid = element_blank(),  # Eliminar cuadrículas
panel.border = element_blank(),  # Eliminar bordes
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),  # Centrar título
plot.subtitle = element_text(size = 12, hjust = 0.5),  # Centrar subtítulo
legend.position = "bottom",  # Mover la leyenda abajo
legend.key.width = unit(2, "cm"),  # Ancho de los elementos de la leyenda
legend.key.height = unit(0.4, "cm")  # Altura de los elementos de la leyenda
) +
# Títulos
labs(
title = "Flujos Migratorios en el Noroeste de México",
subtitle = "Rutas de migración representadas por el número de personas",
caption= 'Fuente: \n WorldPop, 2016 \n Autor:  @FerDoranNie \n #30DayMapChallenge'
)
regions <- migrationData$region %>%  unique
regions
for(r in regions){
r
}
for(r in regions){
print(r)
}
for(r in regions){
print(r)
p <- ggplot(migrationData[region==r]) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
size=prdmig),  color="steelblue") +
scale_size_continuous(
range = c(0.2, 2),  # Tamaño mínimo y máximo de las líneas
breaks = c(100, 500, 1000, 5000, 10000),  # Rango ajustado para prdmig
labels = c("100", "500", "1K", "5K", "10K"),  # Etiquetas legibles
name = "Migración\n(Num. Personas)"
) +
coord_equal()+
facet_wrap(~nomgeo_from)+
theme_void(base_size = 12) +  # Tema base sin elementos visuales innecesarios
theme(
strip.text = element_text(size = 10, face = "bold"),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
legend.position = "bottom",
legend.key.width = unit(2, "cm"),
legend.key.height = unit(0.4, "cm")
) +
# Títulos
labs(
title = paste0("Flujos Migratorios en el ",  r, ' de México'),
subtitle = "Rutas de migración representadas por el número de personas",
caption= 'Fuente: \n WorldPop, 2016 \n Autor:  @FerDoranNie \n #30DayMapChallenge'
)
fileName = paste0(gsub('[[:space:]]', '_', r), '_migration_flux.png')
ggsave(filename = paste0('./images/', fileName), plot = p )
}
for(r in regions){
print(r)
p <- ggplot(migrationData[region==r]) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
size=prdmig),  color="steelblue") +
scale_size_continuous(
range = c(0.2, 2),  # Tamaño mínimo y máximo de las líneas
breaks = c(100, 500, 1000, 5000, 10000),  # Rango ajustado para prdmig
labels = c("100", "500", "1K", "5K", "10K"),  # Etiquetas legibles
name = "Migración\n(Num. Personas)"
) +
coord_equal()+
facet_wrap(~nomgeo_from)+
theme_void(base_size = 12) +  # Tema base sin elementos visuales innecesarios
theme(
strip.text = element_text(size = 10, face = "bold"),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
legend.position = "bottom",
legend.key.width = unit(2, "cm"),
legend.key.height = unit(0.4, "cm")
) +
# Títulos
labs(
title = paste0("Flujos Migratorios en el ",  r, ' de México'),
subtitle = "Rutas de migración representadas por el número de personas",
caption= 'Fuente: \n WorldPop, 2016 \n Autor:  @FerDoranNie \n #30DayMapChallenge'
)
fileName = paste0(gsub('[[:space:]]', '_', r), '_migration_flux.png')
ggsave(filename = paste0('./images/', fileName), plot = p,
width = 1200, height = 675, units = "px", bg = "white", )
}
for(r in regions){
print(r)
p <- ggplot(migrationData[region==r]) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
size=prdmig),  color="steelblue") +
scale_size_continuous(
range = c(0.2, 2),  # Tamaño mínimo y máximo de las líneas
breaks = c(100, 500, 1000, 5000, 10000),  # Rango ajustado para prdmig
labels = c("100", "500", "1K", "5K", "10K"),  # Etiquetas legibles
name = "Migración\n(Num. Personas)"
) +
coord_equal()+
facet_wrap(~nomgeo_from)+
theme_void(base_size = 12) +  # Tema base sin elementos visuales innecesarios
theme(
strip.text = element_text(size = 10, face = "bold"),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
legend.position = "bottom",
legend.key.width = unit(2, "cm"),
legend.key.height = unit(0.4, "cm")
) +
# Títulos
labs(
title = paste0("Flujos Migratorios en el ",  r, ' de México'),
subtitle = "Rutas de migración representadas por el número de personas",
caption= 'Fuente: \n WorldPop, 2016 \n Autor:  @FerDoranNie \n #30DayMapChallenge'
)
fileName = paste0(gsub('[[:space:]]', '_', r), '_migration_flux.png')
ggsave(filename = paste0('./images/', fileName), plot = p,
width = 1200, height = 675, units = "px", bg = "white", scale=2)
}
for(r in regions){
print(r)
p <- ggplot(migrationData[region==r]) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
size=prdmig),  color="steelblue") +
scale_size_continuous(
range = c(0.2, 2),  # Tamaño mínimo y máximo de las líneas
breaks = c(100, 500, 1000, 5000, 10000),  # Rango ajustado para prdmig
labels = c("100", "500", "1K", "5K", "10K"),  # Etiquetas legibles
name = "Migración\n(Num. Personas)"
) +
coord_equal()+
facet_wrap(~nomgeo_from)+
theme_void(base_size = 12) +  # Tema base sin elementos visuales innecesarios
theme(
strip.text = element_text(size = 10, face = "bold"),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
legend.position = "bottom",
legend.key.width = unit(2, "cm"),
legend.key.height = unit(0.4, "cm")
) +
# Títulos
labs(
title = paste0("Flujos Migratorios en el ",  r, ' de México'),
subtitle = "Rutas de migración representadas por el número de personas",
caption= 'Fuente: \n WorldPop, 2016 \n Autor:  @FerDoranNie \n #30DayMapChallenge'
)
fileName = paste0(gsub('[[:space:]]', '_', r), '_migration_flux.png')
ggsave(filename = paste0('./images/', fileName), plot = p,
width = 1200, height = 675, units = "px", bg = "white", scale=1.5)
}
for(r in regions){
print(r)
p <- ggplot(migrationData[region==r]) +
# geom_sf(data = statesMap)+
borders("world", regions = 'mexico', colour = "black", fill = "gray80") +
geom_segment(aes(x = lonfr, y = latfr,
xend = lonto, yend = latto,
size=prdmig),  color="steelblue") +
scale_size_continuous(
range = c(0.2, 2),  # Tamaño mínimo y máximo de las líneas
breaks = c(100, 500, 1000, 5000, 10000),  # Rango ajustado para prdmig
labels = c("100", "500", "1K", "5K", "10K"),  # Etiquetas legibles
name = "Migración\n(Num. Personas)"
) +
coord_equal()+
facet_wrap(~nomgeo_from)+
theme_void(base_size = 12) +  # Tema base sin elementos visuales innecesarios
theme(
strip.text = element_text(size = 10, face = "bold"),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
legend.position = "bottom",
legend.key.width = unit(2, "cm"),
legend.key.height = unit(0.4, "cm")
) +
# Títulos
labs(
title = paste0("Flujos Migratorios en el ",  r, ' de México'),
subtitle = "Rutas de migración representadas por el número de personas",
caption= 'Fuente: \n WorldPop, 2016 \n Autor:  @FerDoranNie \n #30DayMapChallenge'
)
fileName = paste0(gsub('[[:space:]]', '_', r), '_migration_flux.png')
ggsave(filename = paste0('./images/', fileName), plot = p,
width = 1200, height = 675, units = "px", bg = "white", scale=1.75)
}
